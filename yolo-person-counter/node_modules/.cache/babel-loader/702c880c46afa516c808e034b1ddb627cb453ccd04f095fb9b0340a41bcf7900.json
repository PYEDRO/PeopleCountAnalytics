{"ast":null,"code":"var _jsxFileName = \"/home/lapisco/Desktop/pessoal/Counter/yolo-person-counter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [videoURL, setVideoURL] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [polygons, setPolygons] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const [isDrawingStage, setIsDrawingStage] = useState(false);\n  const [showOriginalVideo, setShowOriginalVideo] = useState(true);\n  const [peopleCount, setPeopleCount] = useState(0); // Novo estado para a contagem de pessoas\n  const videoRef = useRef(null);\n  const stageRef = useRef(null);\n  const [videoGet, setVideoGet] = useState();\n  useEffect(() => {\n    if (videoFile) {\n      const url = URL.createObjectURL(videoFile);\n      console.log(\"URL:\", url);\n      setVideoURL(url);\n      return () => URL.revokeObjectURL(url);\n    }\n  }, [videoFile]);\n  const handleVideoUpload = event => {\n    setVideoFile(event.target.files[0]);\n    setProcessedVideo(null);\n    setShowOriginalVideo(true);\n  };\n  const handleMouseDown = event => {\n    if (isDrawingStage && !drawing) {\n      const {\n        x,\n        y\n      } = event.target.getStage().getPointerPosition();\n      setPolygons([...polygons, [{\n        x,\n        y\n      }]]);\n      setDrawing(true);\n    }\n  };\n  const handleMouseMove = event => {\n    if (isDrawingStage && drawing) {\n      const {\n        x,\n        y\n      } = event.target.getStage().getPointerPosition();\n      const lastPolygon = polygons[polygons.length - 1];\n      lastPolygon.push({\n        x,\n        y\n      });\n      setPolygons(polygons.slice(0, -1).concat([lastPolygon]));\n    }\n  };\n  const handleMouseUp = () => {\n    if (isDrawingStage) {\n      setDrawing(false);\n    }\n  };\n  const handleStartDrawing = () => {\n    setIsDrawingStage(true);\n  };\n  const handleProcessVideo = async () => {\n    if (!videoFile || polygons.length === 0) {\n      alert('Please upload a video and define a polygon.');\n      return;\n    }\n    const videoWidth = videoRef.current.videoWidth;\n    const videoHeight = videoRef.current.videoHeight;\n    const canvasWidth = stageRef.current.width();\n    const canvasHeight = stageRef.current.height();\n    const polygonData = polygons.map(polygon => polygon.map(point => [point.x / canvasWidth * videoWidth, point.y / canvasHeight * videoHeight]));\n    const formData = new FormData();\n    formData.append('video', videoFile);\n    formData.append('polygon', JSON.stringify(polygonData));\n    setLoading(true);\n    const eventSource = new EventSource(\"http://localhost:8000/stream_count\");\n    eventSource.onmessage = event => {\n      setPeopleCount(event.data); // Atualiza a contagem de pessoas em tempo real\n    };\n    eventSource.onerror = error => {\n      console.error(\"Error receiving event source data\", error);\n      eventSource.close();\n      setLoading(false);\n    };\n    try {\n      const response = await fetch('http://localhost:8000/analyze', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const videoFilename = data.video_filename;\n        const videoURL = `http://localhost:8000/videos/${videoFilename}`;\n        setProcessedVideo(videoURL);\n        setVideoGet(videoFilename);\n        setShowOriginalVideo(false); // Ocultar o vídeo original após o processamento\n        eventSource.close();\n      } else {\n        alert('Failed to process video.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error processing video.');\n      eventSource.close();\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People Counting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), !videoFile && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: \"Carregar V\\xEDdeo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleVideoUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [showOriginalVideo && videoURL && /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        src: videoURL,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), videoURL && isDrawingStage && showOriginalVideo && /*#__PURE__*/_jsxDEV(Stage, {\n        ref: stageRef,\n        width: videoRef.current ? videoRef.current.clientWidth : 800,\n        height: videoRef.current ? videoRef.current.clientHeight : 600,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: polygons.map((polygon, index) => /*#__PURE__*/_jsxDEV(Line, {\n            points: polygon.flatMap(point => [point.x, point.y]),\n            stroke: \"black\",\n            strokeWidth: 2,\n            closed: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [!isDrawingStage && videoURL && showOriginalVideo && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartDrawing,\n        children: \"Start Drawing Polygons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), isDrawingStage && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcessVideo,\n        children: \"Apply Analytic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing\",\n      children: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }, this), processedVideo && !showOriginalVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processed-video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"processed-video\",\n        src: processedVideo,\n        controls: true\n      }, processedVideo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-count\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Contagem de Pessoas: \", peopleCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y33eAwzfPARmj5k86rZioGrXjUA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Stage","Layer","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","videoFile","setVideoFile","videoURL","setVideoURL","processedVideo","setProcessedVideo","loading","setLoading","polygons","setPolygons","drawing","setDrawing","isDrawingStage","setIsDrawingStage","showOriginalVideo","setShowOriginalVideo","peopleCount","setPeopleCount","videoRef","stageRef","videoGet","setVideoGet","url","URL","createObjectURL","console","log","revokeObjectURL","handleVideoUpload","event","target","files","handleMouseDown","x","y","getStage","getPointerPosition","handleMouseMove","lastPolygon","length","push","slice","concat","handleMouseUp","handleStartDrawing","handleProcessVideo","alert","videoWidth","current","videoHeight","canvasWidth","width","canvasHeight","height","polygonData","map","polygon","point","formData","FormData","append","JSON","stringify","eventSource","EventSource","onmessage","data","onerror","error","close","response","fetch","method","body","ok","json","videoFilename","video_filename","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","onChange","ref","src","controls","clientWidth","clientHeight","onMouseDown","onMouseMove","onMouseUp","style","position","top","left","index","points","flatMap","stroke","strokeWidth","closed","onClick","_c","$RefreshReg$"],"sources":["/home/lapisco/Desktop/pessoal/Counter/yolo-person-counter/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { Stage, Layer, Line } from 'react-konva';\n\nfunction App() {\n  const [videoFile, setVideoFile] = useState(null);\n  const [videoURL, setVideoURL] = useState(null);\n  const [processedVideo, setProcessedVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [polygons, setPolygons] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  const [isDrawingStage, setIsDrawingStage] = useState(false);\n  const [showOriginalVideo, setShowOriginalVideo] = useState(true);\n  const [peopleCount, setPeopleCount] = useState(0); // Novo estado para a contagem de pessoas\n  const videoRef = useRef(null);\n  const stageRef = useRef(null);\n  const [videoGet, setVideoGet] = useState();\n\n  useEffect(() => {\n    if (videoFile) {\n      const url = URL.createObjectURL(videoFile);\n      console.log(\"URL:\", url);\n      setVideoURL(url);\n      return () => URL.revokeObjectURL(url);\n    }\n  }, [videoFile]);\n\n  const handleVideoUpload = (event) => {\n    setVideoFile(event.target.files[0]);\n    setProcessedVideo(null);\n    setShowOriginalVideo(true);\n  };\n\n  const handleMouseDown = (event) => {\n    if (isDrawingStage && !drawing) {\n      const { x, y } = event.target.getStage().getPointerPosition();\n      setPolygons([...polygons, [{ x, y }]]);\n      setDrawing(true);\n    }\n  };\n\n  const handleMouseMove = (event) => {\n    if (isDrawingStage && drawing) {\n      const { x, y } = event.target.getStage().getPointerPosition();\n      const lastPolygon = polygons[polygons.length - 1];\n      lastPolygon.push({ x, y });\n      setPolygons(polygons.slice(0, -1).concat([lastPolygon]));\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (isDrawingStage) {\n      setDrawing(false);\n    }\n  };\n\n  const handleStartDrawing = () => {\n    setIsDrawingStage(true);\n  };\n\n  const handleProcessVideo = async () => {\n    if (!videoFile || polygons.length === 0) {\n      alert('Please upload a video and define a polygon.');\n      return;\n    }\n  \n    const videoWidth = videoRef.current.videoWidth;\n    const videoHeight = videoRef.current.videoHeight;\n    const canvasWidth = stageRef.current.width();\n    const canvasHeight = stageRef.current.height();\n  \n    const polygonData = polygons.map((polygon) =>\n      polygon.map((point) => [\n        (point.x / canvasWidth) * videoWidth,\n        (point.y / canvasHeight) * videoHeight,\n      ])\n    );\n\n    const formData = new FormData();\n    formData.append('video', videoFile);\n    formData.append('polygon', JSON.stringify(polygonData));\n\n    setLoading(true);\n\n    const eventSource = new EventSource(\"http://localhost:8000/stream_count\");\n    \n    eventSource.onmessage = (event) => {\n      setPeopleCount(event.data);  // Atualiza a contagem de pessoas em tempo real\n    };\n\n    eventSource.onerror = (error) => {\n      console.error(\"Error receiving event source data\", error);\n      eventSource.close();\n      setLoading(false);\n    };\n\n    try {\n      const response = await fetch('http://localhost:8000/analyze', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const videoFilename = data.video_filename;\n        const videoURL = `http://localhost:8000/videos/${videoFilename}`;\n        setProcessedVideo(videoURL);\n        setVideoGet(videoFilename);\n        setShowOriginalVideo(false); // Ocultar o vídeo original após o processamento\n        eventSource.close();\n      } else {\n        alert('Failed to process video.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error processing video.');\n      eventSource.close();\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>People Counting</h1>\n\n      {!videoFile && (\n        <>\n          <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n            Carregar Vídeo\n          </label>\n          <input id=\"file-upload\" type=\"file\" accept=\"video/*\" onChange={handleVideoUpload} />\n        </>\n      )}\n\n      <div className=\"video-container\">\n        {showOriginalVideo && videoURL && (\n          <video ref={videoRef} src={videoURL} controls />\n        )}\n        {videoURL && isDrawingStage && showOriginalVideo && (\n          <Stage\n            ref={stageRef}\n            width={videoRef.current ? videoRef.current.clientWidth : 800}\n            height={videoRef.current ? videoRef.current.clientHeight : 600}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            style={{ position: 'absolute', top: 0, left: 0 }}\n          >\n            <Layer>\n              {polygons.map((polygon, index) => (\n                <Line\n                  key={index}\n                  points={polygon.flatMap((point) => [point.x, point.y])}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  closed\n                />\n              ))}\n            </Layer>\n          </Stage>\n        )}\n      </div>\n      <div className=\"button-container\">\n        {!isDrawingStage && videoURL && showOriginalVideo && (\n          <button onClick={handleStartDrawing}>Start Drawing Polygons</button>\n        )}\n        {isDrawingStage && (\n          <button onClick={handleProcessVideo}>Apply Analytic</button>\n        )}\n      </div>\n      {loading && <div className=\"processing\">Processing...</div>}\n      {processedVideo && !showOriginalVideo && (\n        <div className=\"processed-video-container\">\n          <h2>Processed Video</h2>\n          <video\n            ref={videoRef}\n            className=\"processed-video\"\n            src={processedVideo}\n            controls\n            key={processedVideo}\n          />\n        </div>\n      )}\n\n      {/* Contador de pessoas */}\n      <div className=\"people-count\">\n        <h2>Contagem de Pessoas: {peopleCount}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC0B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAM8B,QAAQ,GAAG7B,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM8B,QAAQ,GAAG9B,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,CAAC;EAE1CE,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,EAAE;MACb,MAAMsB,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACxB,SAAS,CAAC;MAC1CyB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,GAAG,CAAC;MACxBnB,WAAW,CAACmB,GAAG,CAAC;MAChB,OAAO,MAAMC,GAAG,CAACI,eAAe,CAACL,GAAG,CAAC;IACvC;EACF,CAAC,EAAE,CAACtB,SAAS,CAAC,CAAC;EAEf,MAAM4B,iBAAiB,GAAIC,KAAK,IAAK;IACnC5B,YAAY,CAAC4B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC1B,iBAAiB,CAAC,IAAI,CAAC;IACvBU,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMiB,eAAe,GAAIH,KAAK,IAAK;IACjC,IAAIjB,cAAc,IAAI,CAACF,OAAO,EAAE;MAC9B,MAAM;QAAEuB,CAAC;QAAEC;MAAE,CAAC,GAAGL,KAAK,CAACC,MAAM,CAACK,QAAQ,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAC7D3B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE,CAAC;QAAEyB,CAAC;QAAEC;MAAE,CAAC,CAAC,CAAC,CAAC;MACtCvB,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,MAAM0B,eAAe,GAAIR,KAAK,IAAK;IACjC,IAAIjB,cAAc,IAAIF,OAAO,EAAE;MAC7B,MAAM;QAAEuB,CAAC;QAAEC;MAAE,CAAC,GAAGL,KAAK,CAACC,MAAM,CAACK,QAAQ,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAC7D,MAAME,WAAW,GAAG9B,QAAQ,CAACA,QAAQ,CAAC+B,MAAM,GAAG,CAAC,CAAC;MACjDD,WAAW,CAACE,IAAI,CAAC;QAAEP,CAAC;QAAEC;MAAE,CAAC,CAAC;MAC1BzB,WAAW,CAACD,QAAQ,CAACiC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAACJ,WAAW,CAAC,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI/B,cAAc,EAAE;MAClBD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMiC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B/B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMgC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAC7C,SAAS,IAAIQ,QAAQ,CAAC+B,MAAM,KAAK,CAAC,EAAE;MACvCO,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IAEA,MAAMC,UAAU,GAAG7B,QAAQ,CAAC8B,OAAO,CAACD,UAAU;IAC9C,MAAME,WAAW,GAAG/B,QAAQ,CAAC8B,OAAO,CAACC,WAAW;IAChD,MAAMC,WAAW,GAAG/B,QAAQ,CAAC6B,OAAO,CAACG,KAAK,CAAC,CAAC;IAC5C,MAAMC,YAAY,GAAGjC,QAAQ,CAAC6B,OAAO,CAACK,MAAM,CAAC,CAAC;IAE9C,MAAMC,WAAW,GAAG9C,QAAQ,CAAC+C,GAAG,CAAEC,OAAO,IACvCA,OAAO,CAACD,GAAG,CAAEE,KAAK,IAAK,CACpBA,KAAK,CAACxB,CAAC,GAAGiB,WAAW,GAAIH,UAAU,EACnCU,KAAK,CAACvB,CAAC,GAAGkB,YAAY,GAAIH,WAAW,CACvC,CACH,CAAC;IAED,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE5D,SAAS,CAAC;IACnC0D,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW,CAAC,CAAC;IAEvD/C,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMwD,WAAW,GAAG,IAAIC,WAAW,CAAC,oCAAoC,CAAC;IAEzED,WAAW,CAACE,SAAS,GAAIpC,KAAK,IAAK;MACjCZ,cAAc,CAACY,KAAK,CAACqC,IAAI,CAAC,CAAC,CAAE;IAC/B,CAAC;IAEDH,WAAW,CAACI,OAAO,GAAIC,KAAK,IAAK;MAC/B3C,OAAO,CAAC2C,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDL,WAAW,CAACM,KAAK,CAAC,CAAC;MACnB9D,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,IAAI;MACF,MAAM+D,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEf;MACR,CAAC,CAAC;MAEF,IAAIY,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMR,IAAI,GAAG,MAAMI,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,aAAa,GAAGV,IAAI,CAACW,cAAc;QACzC,MAAM3E,QAAQ,GAAG,gCAAgC0E,aAAa,EAAE;QAChEvE,iBAAiB,CAACH,QAAQ,CAAC;QAC3BmB,WAAW,CAACuD,aAAa,CAAC;QAC1B7D,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7BgD,WAAW,CAACM,KAAK,CAAC,CAAC;MACrB,CAAC,MAAM;QACLvB,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACd3C,OAAO,CAAC2C,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BtB,KAAK,CAAC,yBAAyB,CAAC;MAChCiB,WAAW,CAACM,KAAK,CAAC,CAAC;IACrB;IAEA9D,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAKmF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpF,OAAA;MAAAoF,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEvB,CAACnF,SAAS,iBACTL,OAAA,CAAAE,SAAA;MAAAkF,QAAA,gBACEpF,OAAA;QAAOyF,OAAO,EAAC,aAAa;QAACN,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRxF,OAAA;QAAO0F,EAAE,EAAC,aAAa;QAACC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,SAAS;QAACC,QAAQ,EAAE5D;MAAkB;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACpF,CACH,eAEDxF,OAAA;MAAKmF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7BjE,iBAAiB,IAAIZ,QAAQ,iBAC5BP,OAAA;QAAO8F,GAAG,EAAEvE,QAAS;QAACwE,GAAG,EAAExF,QAAS;QAACyF,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAChD,EACAjF,QAAQ,IAAIU,cAAc,IAAIE,iBAAiB,iBAC9CnB,OAAA,CAACJ,KAAK;QACJkG,GAAG,EAAEtE,QAAS;QACdgC,KAAK,EAAEjC,QAAQ,CAAC8B,OAAO,GAAG9B,QAAQ,CAAC8B,OAAO,CAAC4C,WAAW,GAAG,GAAI;QAC7DvC,MAAM,EAAEnC,QAAQ,CAAC8B,OAAO,GAAG9B,QAAQ,CAAC8B,OAAO,CAAC6C,YAAY,GAAG,GAAI;QAC/DC,WAAW,EAAE9D,eAAgB;QAC7B+D,WAAW,EAAE1D,eAAgB;QAC7B2D,SAAS,EAAErD,aAAc;QACzBsD,KAAK,EAAE;UAAEC,QAAQ,EAAE,UAAU;UAAEC,GAAG,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAE,CAAE;QAAArB,QAAA,eAEjDpF,OAAA,CAACH,KAAK;UAAAuF,QAAA,EACHvE,QAAQ,CAAC+C,GAAG,CAAC,CAACC,OAAO,EAAE6C,KAAK,kBAC3B1G,OAAA,CAACF,IAAI;YAEH6G,MAAM,EAAE9C,OAAO,CAAC+C,OAAO,CAAE9C,KAAK,IAAK,CAACA,KAAK,CAACxB,CAAC,EAAEwB,KAAK,CAACvB,CAAC,CAAC,CAAE;YACvDsE,MAAM,EAAC,OAAO;YACdC,WAAW,EAAE,CAAE;YACfC,MAAM;UAAA,GAJDL,KAAK;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNxF,OAAA;MAAKmF,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAC9B,CAACnE,cAAc,IAAIV,QAAQ,IAAIY,iBAAiB,iBAC/CnB,OAAA;QAAQgH,OAAO,EAAE/D,kBAAmB;QAAAmC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACpE,EACAvE,cAAc,iBACbjB,OAAA;QAAQgH,OAAO,EAAE9D,kBAAmB;QAAAkC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACL7E,OAAO,iBAAIX,OAAA;MAAKmF,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1D/E,cAAc,IAAI,CAACU,iBAAiB,iBACnCnB,OAAA;MAAKmF,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCpF,OAAA;QAAAoF,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxF,OAAA;QACE8F,GAAG,EAAEvE,QAAS;QACd4D,SAAS,EAAC,iBAAiB;QAC3BY,GAAG,EAAEtF,cAAe;QACpBuF,QAAQ;MAAA,GACHvF,cAAc;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGDxF,OAAA;MAAKmF,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BpF,OAAA;QAAAoF,QAAA,GAAI,uBAAqB,EAAC/D,WAAW;MAAA;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpF,EAAA,CA3LQD,GAAG;AAAA8G,EAAA,GAAH9G,GAAG;AA6LZ,eAAeA,GAAG;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}